- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Downloading and Installing NGINX
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载并安装NGINX
- en: '**NGINX** (pronounced *engine-x*) has become the leader among web servers ever
    since it came out 20 years ago. Back in 2004, its main goal was to outperform
    Apache, and today, NGINX is outperforming every web server when it comes to high-traffic
    websites or security. Throughout this book, we will discover and learn how to
    use NGINX, step by step. We will cover many subjects to have a configuration tailored
    to everyone’s needs.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**NGINX**（发音为*engine-x*）自20年前发布以来，已成为Web服务器中的领导者。2004年，它的主要目标是超越Apache，而今天，在高流量网站或安全性方面，NGINX超越了所有其他Web服务器。在本书中，我们将一步步发现并学习如何使用NGINX。我们将涉及多个主题，以便为每个人量身定制配置。'
- en: In this first chapter, we will proceed with the necessary steps toward establishing
    a functional setup of NGINX. This moment is crucial for the smooth functioning
    of your web server—there are some required libraries and tools for installing
    the web server, some parameters that you will have to decide upon when compiling
    the binaries, and there may also be some configuration changes to perform on your
    system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第一部分，我们将进行建立一个功能正常的NGINX配置所需的步骤。这一时刻对于确保您的Web服务器顺利运行至关重要——在安装Web服务器时需要一些必备的库和工具，在编译二进制文件时您需要决定一些参数，并且可能还需要对系统进行一些配置更改。
- en: By the end of this chapter, you will have installed NGINX either through a public
    repository or by compiling a custom version embedding all the extra modules you
    might need.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将通过公共仓库或通过编译定制版本（嵌入所有可能需要的额外模块）来安装NGINX。
- en: 'This chapter covers the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容包括以下内容：
- en: Installing NGINX via package managers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过包管理器安装NGINX
- en: Downloading and installing the prerequisites for compiling NGINX binaries
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并安装编译NGINX二进制文件的前提条件
- en: Downloading a suitable version of the NGINX source code
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载适合版本的NGINX源代码
- en: Configuring NGINX compile-time options
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置NGINX编译时选项
- en: Controlling the application with a `unit` `service` file
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`unit` `service`文件控制应用程序
- en: Configuring the system to launch NGINX automatically on startup
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置系统在启动时自动启动NGINX
- en: A quick overview of the possibilities offered by NGINX Plus
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速概览NGINX Plus提供的功能
- en: …
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: Installing NGINX via package managers
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过包管理器安装NGINX
- en: The quickest, and easiest, way to install NGINX is to simply use your OS-provided
    version. Most of the time, these are kept fairly updated; however, for some Linux
    distributions focusing on stability, you may only have older versions of NGINX
    available. Sometimes, your Linux distribution may provide multiple versions of
    NGINX with different compile flags.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 安装NGINX最快、最简单的方法是直接使用操作系统提供的版本。大多数情况下，这些版本都保持相对较新；然而，对于一些专注于稳定性的Linux发行版，您可能只能找到较旧的NGINX版本。有时，您的Linux发行版可能会提供多个版本的NGINX，且具有不同的编译标志。
- en: 'In general, before embarking on a more complex journey, we should check whether
    we can use the easy solution. For Red Hat Linux-based operating systems, we need
    to enable the EPEL repo first and then do the same:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在开始更复杂的操作之前，我们应当检查是否可以使用简单的解决方案。对于基于Red Hat Linux的操作系统，我们需要先启用EPEL仓库，然后进行相同操作：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For a Debian-based operating system, we first find the NGINX compiles available
    and then get the information for the one we want:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于Debian的操作系统，我们首先查找可用的NGINX编译版本，然后获取我们需要的版本信息：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the version provided is current enough, then you’re ready to configure NGINX
    in the next chapter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供的版本足够新，那么您已经准备好在下一章配置NGINX了。
- en: If the version provided by your distribution is too old, then NGINX provides
    packages for **RHEL/CentOS distributions** as well as **Debian/Ubuntu distributions**.
    We encourage you to visit the official NGINX website to make sure the version
    given by your distribution isn’t outdated.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发行版提供的版本过旧，NGINX也提供**RHEL/CentOS发行版**以及**Debian/Ubuntu发行版**的包。我们建议您访问NGINX官方网站，确保您发行版提供的版本不是过时的。
- en: NGINX-provided packages
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NGINX提供的包
- en: 'To set up a `yum` repository for RHEL/CentOS, create a file named `/etc/yum.repos.d/nginx.repo`
    with the following contents:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要为RHEL/CentOS设置`yum`仓库，创建一个名为`/etc/yum.repos.d/nginx.repo`的文件，内容如下：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Replace `OS` with `rhel` or `centos`, depending on the distribution used, and
    `OSRELEASE` with `8` or `9`, for versions 8.x or 9.x, respectively. Afterward,
    NGINX can now be installed with `yum`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根据所使用的发行版，将`OS`替换为`rhel`或`centos`，将`OSRELEASE`替换为`8`或`9`，分别对应8.x或9.x版本。之后，您可以使用`yum`安装NGINX：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For Debian-based distributions, we need to first use their signing key to authenticate
    the package signatures. Download the following file first from [http://nginx.org/keys/nginx_signing.key](http://nginx.org/keys/nginx_signing.key).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于Debian的发行版，我们首先需要使用它们的签名密钥来验证软件包签名。首先从[http://nginx.org/keys/nginx_signing.key](http://nginx.org/keys/nginx_signing.key)下载以下文件。
- en: 'Then, run the following command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行以下命令：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'With the key added, we can now add the NGINX repository to `sources.list` found
    in `/etc/apt/sources.list`. For Debian, we add the following lines:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 添加密钥后，我们现在可以将NGINX的仓库添加到`/etc/apt/sources.list`中的`sources.list`文件里。对于Debian系统，我们添加以下行：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here, `codename` is either `trixie` or `bookworm`, depending on your version
    of Debian. For Ubuntu, we use the following dependencies:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`codename`是`trixie`或`bookworm`，具体取决于你使用的Debian版本。对于Ubuntu系统，我们使用以下依赖项：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here, `codename` is either `noble`, `focal`, or `bionic`, depending on your
    version of Ubuntu. Finally, we can install NGINX with the `apt` command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`codename`是`noble`、`focal`或`bionic`，具体取决于你使用的Ubuntu版本。最后，我们可以使用`apt`命令安装NGINX：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now that we have learned how to install NGINX from repositories, let’s have
    a look at how we can compile it from the source and benefit from having custom
    modules that are not provided with the default NGINX.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了如何从软件仓库安装NGINX，接下来我们来看看如何从源代码编译它，并通过自定义模块获得额外的功能，这些模块在默认的NGINX中并不提供。
- en: Compiling NGINX from source
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从源代码编译NGINX
- en: There are situations where compiling NGINX from source is preferable. It gives
    us the most flexibility regarding modules, so we can customize better for our
    intended usage. For example, we could compile a very lean version for embedded
    hardware.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，从源代码编译NGINX是更可取的。它为我们提供了最大的灵活性，特别是在模块方面，这样我们可以根据预期的用途进行更好的定制。例如，我们可以为嵌入式硬件编译一个非常精简的版本。
- en: Additionally, we can make sure we use the latest version of NGINX and have all
    new features available to us. Keep in mind, though, that when installing software
    from source, you are responsible for keeping it updated. NGINX, just like every
    other piece of software, sometimes finds security issues that it needs to address.
    An OS package is much easier to update than a source installation but, so long
    as you’re aware of the need to maintain it yourself, there is absolutely no problem.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以确保使用最新版本的NGINX，并能使用所有新功能。然而请记住，当你从源代码安装软件时，你需要自行负责更新它。NGINX和其他软件一样，偶尔会发现需要解决的安全问题。操作系统的软件包比源代码安装更容易更新，但只要你清楚需要自己维护它，就完全没有问题。
- en: Depending on the optional modules that you select at compile time, you will
    perhaps need different prerequisites. We will guide you through the process of
    installing the most common ones, such as **GCC**, **PCRE**, **zlib**, and **OpenSSL**.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你在编译时选择的可选模块，你可能需要不同的前提条件。我们将引导你安装最常见的依赖项，如**GCC**、**PCRE**、**zlib**和**OpenSSL**。
- en: Installing GNU Compiler Collection
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装GNU编译器集合
- en: NGINX is a program written in C, so you will first need to install a compiler
    tool such as the **GNU Compiler Collection** (**GCC**) on your system. GCC may
    already be present on your system, but if that is not the case, you will have
    to install it before going any further.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: NGINX是用C语言编写的，因此你首先需要在系统上安装一个编译工具，如**GNU编译器集合**（**GCC**）。GCC可能已经存在于你的系统中，但如果没有，你需要在继续之前先安装它。
- en: Note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: GCC is a collection of free open source compilers for various languages – C,
    C++, Java, Ada, Fortran, and so on. It is the most commonly used compiler suite
    in the Linux world, and Windows versions are also available. A vast number of
    processors are supported, such as x86, AMD64, PowerPC, ARM, MIPS, and more.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: GCC是一个免费的开源编译器集合，支持多种语言——如C、C++、Java、Ada、Fortran等。它是Linux世界中最常用的编译器套件，Windows版本也有提供。支持大量处理器架构，如x86、AMD64、PowerPC、ARM、MIPS等。
- en: 'Follow these steps to install GCC:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤安装GCC：
- en: 'First, make sure it isn’t already installed on your system:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，确保它没有在你的系统上安装：
- en: '[PRE8]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'apt, execute the following command:'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行以下命令以安装`apt`：
- en: '[PRE9]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that the `apt` and `yum` commands will not only install GCC; they will
    also proceed to download and install all common requirements for building applications
    from source, such as code headers and other compilation tools.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`apt`和`yum`命令不仅会安装GCC，还会下载并安装构建源代码应用程序所需的所有常见依赖项，如代码头文件和其他编译工具。
- en: The PCRE library
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PCRE库
- en: The `pcre` and `pcre-devel`. The first one provides the compiled version of
    the library, whereas the second one provides development headers and sources for
    compiling projects, which are required in our case.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`pcre` 和 `pcre-devel`。第一个提供了库的编译版本，而第二个则提供了开发头文件和编译项目所需的源代码，这在我们的情况下是必需的。'
- en: Here are some example commands that you can run in order to install both packages.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些示例命令，你可以执行这些命令来安装这两个软件包。
- en: 'Using `yum`, execute the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `yum`，执行以下命令：
- en: '[PRE11]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Or you can install all PCRE-related packages using the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以使用以下命令安装所有与 PCRE 相关的软件包：
- en: '[PRE12]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If you use `apt`, use the following command:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 `apt`，请使用以下命令：
- en: '[PRE13]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If these packages are already installed on your system, you will receive a
    message saying something like `nothing to do`; in other words, the package manager
    did not install or update any component:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些软件包已经安装在系统中，你会收到类似 `nothing to do` 的消息；换句话说，包管理器没有安装或更新任何组件：
- en: '![Figure 1.1: APT showing the PCRE library is already installed.](img/B21787_01_1.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1：APT 显示 PCRE 库已经安装。](img/B21787_01_1.jpg)'
- en: 'Figure 1.1: APT showing the PCRE library is already installed.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：APT 显示 PCRE 库已经安装。
- en: The preceding output signifies that both the components, `libpcre3` and `libpcre3-dev`,
    are already present in the system.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 上述输出表明，`libpcre3` 和 `libpcre3-dev` 这两个组件已经存在于系统中。
- en: The zlib library
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: zlib 库
- en: The `zlib` library provides developers with compression algorithms. It is required
    for the use of `.gzip` compression in various modules of NGINX. Again, you can
    use your package manager to install this component as it is part of the default
    repositories. Similar to PCRE, you will need the `zlib` library and its associated
    `zlib-dev` component as well.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`zlib` 库为开发者提供了压缩算法。它在 NGINX 的多个模块中使用 `.gzip` 压缩时是必需的。同样，你可以使用包管理器安装这个组件，因为它是默认仓库的一部分。类似于
    PCRE，你还需要安装 `zlib` 库及其关联的 `zlib-dev` 组件。'
- en: 'Using `yum`, execute the following command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `yum`，执行以下命令：
- en: '[PRE14]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Using `apt`, execute the following command:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `apt`，执行以下命令：
- en: '[PRE15]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: These packages install quickly and have no known dependency issues.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这些软件包安装速度很快，并且没有已知的依赖问题。
- en: OpenSSL
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OpenSSL
- en: The OpenSSL project is a collaborative effort to develop a robust, commercial-grade,
    full-featured, and open source toolkit implementing the **Secure Sockets Layer**
    (**SSL**) v2/v3 and **Transport Layer Security** (**TLS**) v1 protocols as well
    as a full-strength general-purpose cryptography library. The project is managed
    by a worldwide community of volunteers who use the internet to communicate, plan,
    and develop the OpenSSL toolkit and its related documentation. For more information,
    visit [https://www.openssl.org](https://www.openssl.org).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSSL 项目是一个合作开发的项目，旨在开发一个强大、商业级、全功能的开源工具包，实施 **安全套接字层**（**SSL**）v2/v3 和 **传输层安全性**（**TLS**）v1
    协议，并提供一个强大的通用加密库。该项目由全球志愿者社区管理，他们通过互联网进行沟通、规划并开发 OpenSSL 工具包及相关文档。如需更多信息，请访问 [https://www.openssl.org](https://www.openssl.org)。
- en: 'The OpenSSL library will be used by NGINX to serve secure web pages. We thus
    need to install the library and its development package. The process remains the
    same here – you install `openssl` and `openssl-devel`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: NGINX 将使用 OpenSSL 库来提供安全的网页。因此，我们需要安装该库及其开发包。这个过程与之前相同——你需要安装 `openssl` 和 `openssl-devel`：
- en: '[PRE16]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Using `apt`, execute the following command:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `apt`，执行以下命令：
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Important note
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Please be aware of the laws and regulations in your own country. Some countries
    do not allow the use of strong cryptography. The author, publisher, and developers
    of the OpenSSL and NGINX projects will not be held liable for any violations or
    law infringements on your part.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意你所在国家的法律法规。有些国家不允许使用强加密技术。OpenSSL 和 NGINX 项目的作者、出版商以及开发者不对你违反法律或相关规定的行为负责。
- en: Now that you have installed all of the prerequisites, you are ready to download
    and compile the NGINX source code.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经安装了所有必要的前提条件，准备好下载并编译 NGINX 源代码。
- en: Downloading and compiling the NGINX source code
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载并编译 NGINX 源代码
- en: This approach to the download process will lead us to discover the various resources
    at the disposal of server administrators, websites, communities, and wikis all
    relating to NGINX. We will also quickly discuss the different version branches
    available to you, and eventually, select the most appropriate one for your setup.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这种下载过程的方法将帮助我们发现服务器管理员、网站、社区和维基等相关的各种资源。我们还将简要讨论不同的版本分支，并最终选择最适合您设置的版本。
- en: Websites and resources
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网站和资源
- en: Although NGINX is a relatively new and growing project, there are already a
    good number of resources available on the **World Wide Web** (**WWW**) and an
    active community of administrators and developers.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 NGINX 是一个相对较新且不断发展的项目，但在 **万维网** (**WWW**) 上已经有大量的资源可供使用，并且有一个活跃的管理员和开发者社区。
- en: The official website, which is [https://nginx.org/](https://nginx.org/), currently
    serves as an official documentation reference and provides links from which to
    download the latest version of the application source code and binaries. A wiki
    is also available at [https://www.nginx.com/resources/wiki/](https://www.nginx.com/resources/wiki/)
    and offers a wide selection of additional resources such as installation guides
    for various operating systems, tutorials related to the different modules of NGINX,
    and more.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 官方网站 [https://nginx.org/](https://nginx.org/) 目前作为官方文档参考，并提供下载最新版本应用源代码和二进制文件的链接。还可以访问
    [https://www.nginx.com/resources/wiki/](https://www.nginx.com/resources/wiki/)
    提供的维基，里面有丰富的额外资源，比如针对不同操作系统的安装指南、与 NGINX 各种模块相关的教程等。
- en: There are several ways to get help if you should need it. If you have a specific
    question, try posting on the NGINX forum at [https://forum.nginx.org/](https://forum.nginx.org/).
    An active community of users will answer your questions in no time. Additionally,
    the NGINX mailing list, which is relayed on the NGINX forum, will also prove to
    be an excellent resource for any question you may have. If you need direct assistance,
    there is always a group of regulars helping each other out on the IRC channel,
    `#Nginx`, on `irc.libera.chat`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要帮助，有几种方式可以获取支持。如果您有具体问题，可以尝试在 NGINX 论坛上提问，地址是 [https://forum.nginx.org/](https://forum.nginx.org/)。活跃的用户社区会迅速回答您的问题。此外，NGINX
    邮件列表也会通过 NGINX 论坛转发，是解决您可能遇到的任何问题的优秀资源。如果您需要直接帮助，IRC 频道 `#Nginx` 上总有一群常驻人员在互相帮助，频道地址为
    `irc.libera.chat`。
- en: 'Another interesting source of information is the blogosphere. A simple query
    on your favorite search engine should return a good number of blog articles documenting
    NGINX, its configuration, and modules:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的信息来源是博客圈。只需在您喜欢的搜索引擎中简单查询，应该能找到大量记录 NGINX、其配置和模块的博客文章：
- en: '![Figure 1.2: Websites and blogs documenting Nginx](img/B21787_01_2.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2：记录 Nginx 的网站和博客](img/B21787_01_2.jpg)'
- en: 'Figure 1.2: Websites and blogs documenting Nginx'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：记录 Nginx 的网站和博客
- en: It’s now time to head over to the official website and get started with downloading
    the source code for compiling and installing NGINX. Before you do so, let us have
    a quick summary of the available versions and the features that come with them.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候前往官方网站，开始下载源代码以进行编译和安装 NGINX 了。在此之前，让我们先快速回顾一下可用的版本以及它们所包含的功能。
- en: Version branches
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 版本分支
- en: Igor Sysoev, a talented Russian developer and server administrator, initiated
    this open source project back in 2002\. Between the first release in 2004 and
    the current version, the market share of NGINX has been growing steadily. It now
    serves nearly 26.23% of websites on the internet, according to an April 2023 survey
    on [https://www.netcraft.com/](https://www.netcraft.com/). The features are numerous
    and render the application both powerful and flexible at the same time.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Igor Sysoev，一位才华横溢的俄罗斯开发者和服务器管理员，于 2002 年发起了这个开源项目。从 2004 年的第一次发布到现在的版本，NGINX
    的市场份额稳步增长。根据 2023 年 4 月在 [https://www.netcraft.com/](https://www.netcraft.com/)
    的调查，NGINX 目前服务着全球近 26.23% 的网站。其功能众多，使得这个应用既强大又灵活。
- en: 'There are currently three version branches of the project:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 目前项目有三个版本分支：
- en: '**Stable version**: This version is usually recommended, as it is approved
    by both developers and users, but is usually a little behind the mainline version.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳定版本**：这个版本通常是推荐使用的，因为它得到了开发者和用户的认可，但通常会稍微滞后于主线版本。'
- en: '**Mainline version**: This is the latest version available for download and
    comes with the newest developments and bug fixes. It was formerly known as the
    **development version**. Although it is generally solid enough to be installed
    on production servers, there is a small chance that you will run into the occasional
    bug. As such, if you favor stability over novelty, going for the stable version
    is recommended.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主线版本**：这是最新的可下载版本，包含最新的开发内容和错误修复。之前称为**开发版本**。尽管它通常足够稳定，可以安装在生产服务器上，但仍然有小概率遇到偶尔的
    bug。因此，如果你更看重稳定性而非新颖性，建议选择稳定版本。'
- en: '**Legacy version**: If, for some reason, you are interested in looking at the
    older versions, you will find several of them.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**旧版本**：如果你出于某些原因有兴趣查看旧版本，可以找到几个版本。'
- en: A recurrent question regarding mainline versions is “*Are they stable enough
    to be used on production servers?*” Cliff Wells, the original founder and maintainer
    of the NGINX wiki at [https://www.nginx.com/resources/wiki/](https://www.nginx.com/resources/wiki/),
    believes so – “*I generally use and recommend the latest development version.
    It’s only bit me once!*” Early adopters rarely report critical problems. It is
    up to you to select the version you will be using on your server, knowing that
    the instructions given in this book should be valid regardless of the release
    as the NGINX developers have decided to maintain overall backward compatibility
    in new versions. You can find more information on version changes, new additions,
    and bug fixes on the dedicated change log page on the official website.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 关于主线版本的一个常见问题是“*它们足够稳定，能够在生产服务器上使用吗？*”NGINX Wiki 的创始人和原始维护者 Cliff Wells 在 [https://www.nginx.com/resources/wiki/](https://www.nginx.com/resources/wiki/)
    上表示，“*我通常使用并推荐最新的开发版本。它只让我碰了一次钉子！*”早期采用者很少报告严重问题。你可以根据自己的需要选择服务器使用的版本，知道本书中的指导适用于任何版本，因为
    NGINX 开发者已经决定在新版本中保持向后兼容。你可以在官网的专门的变更日志页面找到更多关于版本变化、新增功能和 bug 修复的信息。
- en: Features
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能
- en: 'As of the mainline version 1.25.2, NGINX offers an impressive variety of features,
    which, contrary to what the title of this book indicates, are not all related
    to serving HTTP content. Here is a list of the main features of the web branch,
    quoted from the official website ([https://nginx.org/](https://nginx.org/)):'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 从主线版本 1.25.2 开始，NGINX 提供了丰富的功能，尽管本书标题所示，这些功能并非全都与提供 HTTP 内容相关。以下是官网引用的 Web 分支的主要功能列表（[https://nginx.org/](https://nginx.org/)）：
- en: Serving static and index files, auto indexing; open file descriptor cache; accelerated
    reverse proxying with caching; load balancing and fault tolerance.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供静态文件和索引文件，自动索引；打开文件描述符缓存；加速的反向代理缓存；负载均衡和容错。
- en: Accelerated support with caching of FastCGI, uWSGI, SCGI, and memcached servers;
    load balancing and fault tolerance; modular architecture. Filters include gzipping,
    byte ranges, chunked responses, XSLT, SSI, and image transformation filter. Multiple
    SSI inclusions within a single page can be processed in parallel if they are handled
    by proxies or FastCGI/uWSGI/SCGI servers.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速支持缓存 FastCGI、uWSGI、SCGI 和 memcached 服务器；负载均衡和容错；模块化架构。过滤器包括 gzipping、字节范围、分块响应、XSLT、SSI
    和图像转换过滤器。如果通过代理或 FastCGI/uWSGI/SCGI 服务器处理，单个页面中的多个 SSI 包含可以并行处理。
- en: SSL and TLS SNI support.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL 和 TLS SNI 支持。
- en: 'NGINX can also be used as a mail proxy server. Although this aspect will not
    be closely documented in the book, the following will provide you with some insight
    into it:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: NGINX 还可以用作邮件代理服务器。尽管本书不会详细介绍这一部分，但以下内容将为你提供一些见解：
- en: User redirection to IMAP/POP3 backend using an external HTTP authentication
    server
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户通过外部 HTTP 身份验证服务器重定向到 IMAP/POP3 后端
- en: User authentication using an external HTTP authentication server and connection
    redirection to an internal SMTP backend
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用外部 HTTP 身份验证服务器进行用户身份验证，并将连接重定向到内部 SMTP 后端
- en: 'Authentication methods:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份验证方法：
- en: '`USER/PASS, APOP,` `AUTH LOGIN/PLAIN/CRAM-MD5`'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`USER/PASS, APOP,` `AUTH LOGIN/PLAIN/CRAM-MD5`'
- en: '`LOGIN,` `AUTH LOGIN/PLAIN/CRAM-MD5`'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOGIN,` `AUTH LOGIN/PLAIN/CRAM-MD5`'
- en: '`AUTH LOGIN/PLAIN/CRAM-MD5`'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AUTH LOGIN/PLAIN/CRAM-MD5`'
- en: '**SSL support**'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL 支持**'
- en: '**STARTTLS and** **STLS support**'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**STARTTLS 和** **STLS 支持**'
- en: NGINX is compatible with most computer architectures and operating systems—Windows,
    Linux, macOS, FreeBSD, and Solaris. The application runs fine on 32- and 64-bit
    architectures.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: NGINX 与大多数计算机架构和操作系统兼容——Windows、Linux、macOS、FreeBSD 和 Solaris。该应用在 32 位和 64
    位架构上都能正常运行。
- en: Downloading and extracting
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载和提取
- en: 'Once you have made your choice as to which version you will be using, head
    over to [https://nginx.org/](https://nginx.org/) and find the URL of the file
    you wish to download. Position yourself in your `home` directory, which will contain
    the source code to be compiled, and download the file using `wget`:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了要使用的版本，访问[https://nginx.org/](https://nginx.org/)并找到您希望下载的文件的URL。将自己定位在`home`目录中，该目录将包含待编译的源代码，并使用`wget`下载文件：
- en: '[PRE18]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We will be using version `1.25.2`, the latest stable version as of September
    2023\. Once downloaded, extract the archive contents in the current folder:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用版本`1.25.2`，这是截至2023年9月的最新稳定版本。下载后，请在当前文件夹中解压归档内容：
- en: '[PRE19]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You have successfully downloaded and extracted NGINX. Now, the next step will
    be to configure the compilation process in order to obtain a binary that perfectly
    fits your operating system.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经成功下载并解压了NGINX。接下来的步骤是配置编译过程，以便获得一个完美适配您操作系统的二进制文件。
- en: Exploring the options for configuring the compilation
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索配置编译选项
- en: There are usually three steps when building an application from source—*configuration*,
    *compilation*, and *installation*. The configuration step allows you to select
    a number of options that will not be editable after the program is built, as it
    has a direct impact on the project binaries. Consequently, it is a very important
    stage that you need to follow carefully if you want to avoid surprises later,
    such as the lack of a specific module or files being located in a random folder.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 从源代码构建应用程序通常有三个步骤——*配置*、*编译*和*安装*。配置步骤允许您选择一些选项，这些选项在程序构建后将不可编辑，因为它们直接影响项目的二进制文件。因此，这是一个非常重要的阶段，如果您不想后期遇到惊讶，比如缺少某个特定模块或文件被放置在随机文件夹中，您需要认真跟进此步骤。
- en: The process consists of appending certain switches to the `configure` script
    that comes with the source code. We will discover the three types of switches
    that you can activate, but let us first study the easiest way to proceed.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程包括向随源代码一起提供的`configure`脚本添加某些选项。我们将介绍您可以启用的三种类型的选项，但首先让我们学习最简单的操作方式。
- en: The easy way
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单方式
- en: 'If, for some reason, you do not want to bother with the configuration step,
    such as for testing purposes or simply because you will be recompiling the application
    in the future, you may simply use the `configure` command with no switches. Execute
    the following three commands to build and install a working version of NGINX:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某些原因，您不想麻烦进行配置步骤，比如为了测试目的，或者因为您将来还会重新编译应用程序，您可以简单地使用没有选项的`configure`命令。执行以下三个命令来构建并安装一个可用的NGINX版本：
- en: '[PRE20]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Running this command should initiate a long procedure of verifications to ensure
    that your system contains all of the necessary components. If the configuration
    process fails, please make sure you check the prerequisites section again, as
    it is the most common cause of errors. For information about why the command failed,
    you may also refer to the `objs/autoconf.err` file, which provides a more detailed
    report. The `make` command will compile the application:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令应启动一长串的验证过程，以确保您的系统包含所有必要的组件。如果配置过程失败，请确保再次检查先决条件部分，因为这是最常见的错误原因。有关命令失败的详细信息，您还可以参考`objs/autoconf.err`文件，该文件提供了更详细的报告。`make`命令将编译应用程序：
- en: '[PRE21]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This step should not cause any errors as long as the configuration went fine:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 只要配置顺利进行，这一步应该不会出现错误：
- en: '[PRE22]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This last step will copy the compiled files as well as other resources to the
    installation directory, by default `/usr/local/nginx`. You may need to be logged
    in as `root` to perform this operation depending on permissions granted to the
    `/``usr/local` directory.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步将把编译后的文件以及其他资源复制到安装目录，默认是`/usr/local/nginx`。根据`/usr/local`目录的权限设置，您可能需要以`root`用户身份登录才能执行此操作。
- en: Again, if you build the application without configuring it, you take the risk
    of missing out on a lot of features, such as the optional modules and others that
    we are about to discover.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，如果您在没有配置的情况下构建应用程序，您将面临错过许多功能的风险，例如可选模块和我们接下来将要介绍的其他功能。
- en: Path options
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路径选项
- en: When running the `configure` command, you are offered the chance to enable some
    switches that let you specify the directory or file paths for a variety of elements.
    Please note that the options offered by the configuration switches may change
    according to the version you downloaded. The following options listed are valid
    with the stable version, as of release 1.25.2\. If you use another version, run
    the `./configure --help` command to list the available switches for your setup.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行`configure`命令时，你将有机会启用一些开关，允许你为各种元素指定目录或文件路径。请注意，配置开关提供的选项可能会根据你下载的版本有所不同。以下列出的选项适用于稳定版本，即1.25.2版。如果你使用的是其他版本，请运行`./configure
    --help`命令来列出适用于你设置的可用开关。
- en: 'Using a switch typically consists of appending some text to the command line.
    Here is an example using the `--``conf-path` switch:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 使用开关通常包括将一些文本附加到命令行。以下是使用`--conf-path`开关的示例：
- en: '[PRE23]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Most of the time, the default configuration switches do not need customization.
    However, it is highly recommended to have a look at the configuration switches
    in the official documentation page, `https`, and libraries such as `geoip`, `gzip`,
    `zlib`, or `pcre`. Do note that, in this book, we will compile NGINX with the
    standard switches from **Building NGINX from Sources** and we will be aligned
    with the compiled binaries used by the popular Linux distributions.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，默认的配置开关无需定制。然而，强烈建议你查看官方文档页面、`https`和一些库（如`geoip`、`gzip`、`zlib`或`pcre`）中的配置开关。请注意，在本书中，我们将按照**从源代码构建NGINX**中的标准开关来编译NGINX，并与流行Linux发行版中使用的已编译二进制文件对齐。
- en: Note
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Be aware that these configurations do not include additional third-party modules.
    Please refer to [*Chapter 5*](B21787_05.xhtml#_idTextAnchor557), for more information
    about installing add-ons.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些配置不包括额外的第三方模块。有关安装插件的更多信息，请参考[*第5章*](B21787_05.xhtml#_idTextAnchor557)。
- en: Build configuration issues
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建配置问题
- en: In some cases, the `configure` command may fail – after a long list of checks,
    you may receive a few error messages on your terminal. In most (if not all) cases,
    these errors are related to missing prerequisites or unspecified paths.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，`configure`命令可能会失败——在进行一长串检查后，你的终端可能会显示几个错误信息。在大多数（如果不是全部）情况下，这些错误与缺少前提条件或未指定路径有关。
- en: In such cases, proceed with the following verifications carefully to make sure
    you have all it takes to compile the application, and optionally consult the `objs/autoconf.err`
    file for more details about the compilation problem. This file is generated during
    the `configure` process and will tell you exactly which part of the process failed.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，请仔细进行以下验证，以确保你具备编译应用程序所需的一切，并可选择参考`objs/autoconf.err`文件，以获取关于编译问题的更多详细信息。此文件在`configure`过程中生成，将告诉你具体是哪个环节失败。
- en: Make sure you installed the prerequisites
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保你已安装前提条件
- en: 'There are basically four main prerequisites: GCC, PCRE, `zlib`, and OpenSSL.
    The last three are libraries that must be installed in two packages: the library
    itself and its development sources. Make sure you have installed both for each
    of them. Please refer to the prerequisites at the beginning of this chapter. Note
    that other prerequisites, such as `LibXML2` or `LibXSLT`, might be required to
    enable extra modules (for example, in the case of the HTTP XSLT module).'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上有四个主要的前提条件：GCC、PCRE、`zlib`和OpenSSL。后三者是必须安装的库，分为两个包：库本身和其开发源代码。确保你已为每个库安装了这两部分。请参考本章开头的前提条件。请注意，其他前提条件（如`LibXML2`或`LibXSLT`）可能是启用额外模块所必需的（例如，在HTTP
    XSLT模块的情况下）。
- en: If you are positive that all of the prerequisites were installed correctly,
    perhaps the issue comes from the fact that the `configure` script is unable to
    locate the prerequisite files. In that case, make sure that you include the configuration
    switches related to file paths, as described earlier.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确定所有的前提条件已经正确安装，那么问题可能出在`configure`脚本无法找到必要的文件。在这种情况下，请确保你包含了与文件路径相关的配置开关，如前所述。
- en: 'For example, the following switch allows you to specify the location of the
    OpenSSL library files:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下开关允许你指定OpenSSL库文件的位置：
- en: '[PRE24]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The OpenSSL library file will be looked for in the specified folder.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSSL库文件将会在指定的文件夹中查找。
- en: Directories exist and are writable
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目录存在且可写
- en: Always remember to check the obvious; everyone makes even the simplest of mistakes
    sooner or later. Make sure the directory you placed the NGINX files in has *read*
    and *write* permissions for the user running the configuration and compilation
    scripts. Also ensure that all paths specified in the `configure` script switches
    are existing, valid paths.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 始终记得检查显而易见的地方；每个人都会迟早犯下即使是最简单的错误。确保你放置 NGINX 文件的目录对运行配置和编译脚本的用户具有*读*和*写*权限。同时，确保
    `configure` 脚本中的所有路径都是现有的、有效的路径。
- en: Compiling and installing
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译和安装
- en: The configuration process is of the utmost importance—it generates a makefile
    for the application depending on the selected switches and performs a long list
    of requirement checks on your system. Once the `configure` script is successfully
    executed, you can proceed with compiling NGINX.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 配置过程至关重要——它根据所选的选项为应用程序生成一个 makefile，并对你的系统执行一长串的需求检查。一旦 `configure` 脚本成功执行，你就可以继续编译
    NGINX。
- en: 'Compiling the project equates to executing the `make` command in the project
    source directory:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 编译项目相当于在项目源目录中执行 `make` 命令：
- en: '[PRE25]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'A successful build should result in a final message appearing: `make[1]: leaving
    directory` followed by the project source path.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '成功构建后，应该会出现一条最终消息：`make[1]: leaving directory`，后面跟着项目的源路径。'
- en: Again, problems might occur at compile time. Most of these problems can originate
    from missing prerequisites or invalid paths specified. If this occurs, run the
    `configure` command again and triple-check the switches and all of the prerequisite
    options. It may also be that you downloaded a too-recent version of the prerequisites
    that might not be backward-compatible. In such cases, the best option is to visit
    the official website of the missing component and download an older version.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，编译时可能会出现问题。大多数问题可能源自缺少先决条件或指定的路径无效。如果出现这种情况，请重新运行 `configure` 命令，并仔细检查所有选项和先决条件配置。也有可能是你下载了一个过于新的先决条件版本，导致与旧版本不兼容。在这种情况下，最好的做法是访问缺失组件的官方网站并下载旧版本。
- en: 'If the compilation process was successful, you are ready for the next step:
    installing the application. The following command must be executed with `root`
    privileges:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果编译过程成功，你就可以进入下一步：安装应用程序。以下命令必须使用 `root` 权限执行：
- en: '[PRE26]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The `make install` command executes the `install` section of the makefile. In
    other words, it performs a few simple operations, such as copying binaries and
    configuration files to the specified `install` folder. It also creates directories
    for storing log and HTML files, if these do not already exist. The `make install`
    step is not generally a source of problems unless your system encounters an exceptional
    error, such as a lack of storage space or memory.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`make install` 命令执行 makefile 中的 `install` 部分。换句话说，它执行一些简单的操作，如将二进制文件和配置文件复制到指定的
    `install` 文件夹中。如果这些文件夹不存在，它还会创建用于存储日志和 HTML 文件的目录。除非系统遇到特殊错误（如存储空间或内存不足），否则 `make
    install` 步骤通常不会出问题。'
- en: Note
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You might require `root` privileges for installing the application in the `/usr/local/`
    folder, depending on the folder permissions.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 根据文件夹权限，你可能需要 `root` 权限才能将应用程序安装到 `/usr/local/` 文件夹中。
- en: NGINX is now ready as it has been compiled successfully. In the next section,
    we will turn NGINX into a daemon running in the background.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: NGINX 现在已经准备好，因为它已经成功编译完成。在接下来的部分，我们将把 NGINX 转变为一个在后台运行的守护进程。
- en: Controlling the NGINX service
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制 NGINX 服务
- en: At this stage, you should have successfully built and installed NGINX. The default
    location for the output files is `/usr/local/nginx`, so we will be basing future
    examples using this path to start, stop, run at boot, and keep an eye on the NGINX
    status using a daemon.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，你应该已经成功构建并安装了 NGINX。默认情况下，输出文件的位置是 `/usr/local/nginx`，因此我们将在后续的示例中基于这个路径进行启动、停止、设置开机自启，并通过守护进程查看
    NGINX 状态。
- en: Daemons and services
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 守护进程和服务
- en: The next step is obviously to execute NGINX. However, before doing so, it’s
    important to understand the nature of this application. There are two types of
    computer applications—those that require immediate user input, thus running in
    the foreground, and those that do not, thus running in the background. NGINX is
    of the latter type, often referred to as daemon. Daemon names usually come with
    a trailing `d` and a couple of examples can be mentioned here—`httpd` (the HTTP
    server daemon) is the name given to Apache under several Linux distributions,
    and `named` is the name server daemon. `cron` is the task scheduler—although,
    as you will notice, it is not the case for NGINX. When started from the command
    line, a daemon immediately returns the prompt window, and in most cases, does
    not even bother outputting data to the terminal.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步显然是执行 NGINX。然而，在此之前，了解这个应用程序的性质非常重要。计算机应用程序有两种类型——一种是需要立即用户输入的，因此运行在前台，另一种则不需要，因此运行在后台。NGINX
    属于后一种类型，通常被称为守护进程。守护进程的名称通常带有一个尾随的 `d`，这里可以提到几个例子——`httpd`（HTTP 服务器守护进程）是 Apache
    在多个 Linux 发行版中的名称，`named` 是名称服务器守护进程。`cron` 是任务调度程序——虽然，如你所注意到的，NGINX 并非如此。当从命令行启动时，守护进程会立即返回提示窗口，而且在大多数情况下，甚至不会输出任何数据到终端。
- en: Consequently, when starting NGINX, you will not see any text appear on the screen
    and the prompt will return immediately. While this might seem startling, it is,
    on the contrary, a good sign. It means the daemon was started correctly and the
    configuration did not contain any errors.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当启动 NGINX 时，你不会看到任何文本出现在屏幕上，提示符会立即返回。虽然这看起来有些令人吃惊，但相反，这是一个好兆头。这意味着守护进程已经正确启动，且配置没有包含任何错误。
- en: Users and groups
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户和组
- en: It is of the utmost importance to understand the process architecture of NGINX,
    particularly the users and groups its various processes run under. A very common
    source of trouble when setting up NGINX is invalid file access permissions—due
    to a user or group misconfiguration, you often end up getting `403 Forbidden`
    HTTP errors because NGINX cannot access the requested files.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 了解 NGINX 的进程架构至关重要，特别是它的各个进程运行的用户和组。设置 NGINX 时，最常见的麻烦源是无效的文件访问权限——由于用户或组配置错误，通常会导致
    `403 Forbidden` HTTP 错误，因为 NGINX 无法访问请求的文件。
- en: 'There are two levels of processes with possibly different permission sets:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 进程有两种级别，可能具有不同的权限集：
- en: '`root`. In most Unix-like systems, processes started with the `root` account
    are allowed to open TCP sockets on any port, whereas other users can only open
    listening sockets on a port above `1024`. If you do not start NGINX as `root`,
    standard ports such as `80` or `443` will not be accessible.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`root`。在大多数类 Unix 系统中，以 `root` 账户启动的进程可以在任何端口上打开 TCP 套接字，而其他用户只能在 `1024` 以上的端口上打开监听套接字。如果你不是以
    `root` 启动 NGINX，标准端口如 `80` 或 `443` 将无法访问。'
- en: Note
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The user directive that allows you to specify a different user and group for
    the worker processes will not be taken into consideration for the master process.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 允许你为工作进程指定不同用户和组的用户指令将不会被主进程考虑。
- en: '`user nobody`, and the group will be nobody (or `nogroup`, depending on your
    OS).'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user nobody`，且组将是 nobody（或 `nogroup`，取决于你的操作系统）。'
- en: NGINX command-line switches
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NGINX 命令行选项
- en: 'The NGINX binary accepts command-line arguments for performing various operations,
    among which is controlling background processes. To get a full list of commands,
    you may invoke the **Help** screen using the following commands:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: NGINX 二进制文件接受命令行参数用于执行各种操作，其中包括控制后台进程。要获取完整的命令列表，可以使用以下命令调用 **帮助** 屏幕：
- en: '[PRE27]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The next few sections will describe the purpose of these switches. Some allow
    you to control the daemon, and some let you perform various operations on the
    application configuration.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个部分将描述这些选项的目的。一些选项允许你控制守护进程，一些选项则让你对应用程序配置执行各种操作。
- en: Starting and stopping the daemon
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动和停止守护进程
- en: 'You can start NGINX by running the NGINX binary without any switches. If the
    daemon is already running, a message will show up indicating that a socket is
    already listening on the specified port:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行没有任何选项的 NGINX 二进制文件来启动 NGINX。如果守护进程已经在运行，将会显示一条消息，提示指定端口已经有一个套接字在监听：
- en: '[PRE28]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Beyond this point, you may control the daemon by stopping it, restarting it,
    or simply reloading its configuration. Controlling is done by sending signals
    to the process using the `nginx -``s` command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，你可以通过停止、重新启动或简单地重新加载配置来控制守护进程。控制是通过向进程发送信号来完成的，使用 `nginx -``s` 命令：
- en: '| **Command** | **Description** |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| --- | --- |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `nginx -``s stop` | Stops the daemon immediately (using the `TERM` signal)
    |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| `nginx -``s stop` | 立即停止守护进程（使用 `TERM` 信号） |'
- en: '| `nginx -``s quit` | Stops the daemon gracefully (using the `QUIT` signal)
    |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| `nginx -``s quit` | 优雅地停止守护进程（使用 `QUIT` 信号） |'
- en: '| `nginx -``s reopen` | Reopens log files |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| `nginx -``s reopen` | 重新打开日志文件 |'
- en: '| `nginx -``s reload` | Reloads the configuration |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| `nginx -``s reload` | 重新加载配置 |'
- en: 'Table 1.1: A table to remember how to control the nginx daemon'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1.1：记住如何控制 nginx 守护进程的表格
- en: When starting the daemon, stopping it, or performing any of the preceding operations,
    the configuration file is first parsed and verified. If the configuration is invalid,
    whatever command you have submitted will *fail*, even when trying to stop the
    daemon. In other words, in some cases, you will not be able to even stop NGINX
    if the configuration file is invalid.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 当启动守护进程、停止它或执行任何前述操作时，首先会解析并验证配置文件。如果配置无效，任何提交的命令都会 *失败*，即使是停止守护进程也是如此。换句话说，在某些情况下，如果配置文件无效，你甚至无法停止
    NGINX。
- en: 'An alternate way to terminate the process, in desperate cases only, is to use
    the `kill` or `killall` commands with `root` privileges:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种终止进程的方式，仅在紧急情况下使用，是使用 `kill` 或 `killall` 命令并赋予 `root` 权限：
- en: '[PRE29]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Testing the configuration
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置测试
- en: As you can imagine, this tiny bit of detail might become an important issue
    if you constantly tweak your configuration. The slightest mistake in any of the
    configuration files can result in a loss of control over the service—you are then
    unable to stop it via regular `init` control commands, and obviously, it will
    refuse to start again.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你想象的那样，这个小细节可能会成为一个重要的问题，如果你不断修改配置。配置文件中的任何细微错误都可能导致服务失控——你将无法通过常规的 `init`
    控制命令停止服务，显然它也会拒绝再次启动。
- en: 'In consequence, the following command will be useful to you on many occasions.
    It allows you to check the syntax, validity, and integrity of your configuration:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，以下命令在许多场合都非常有用。它允许你检查配置的语法、有效性和完整性：
- en: '[PRE30]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `-t` switch stands for **test configuration**. NGINX will parse the configuration
    anew and let you know whether it is valid or not. A valid configuration file does
    not necessarily mean NGINX will start though as there might be additional problems
    such as socket issues, invalid paths, or incorrect access permissions.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`-t` 选项代表 **测试配置**。NGINX 将重新解析配置并告知你配置是否有效。然而，一个有效的配置文件并不意味着 NGINX 一定会启动，因为可能还会有其他问题，比如套接字问题、路径无效或权限不正确等。'
- en: 'Obviously, manipulating your configuration files while your server is in production
    is a dangerous thing to do and should be avoided when possible. The best practice,
    in this case, is to place your new configuration into a separate temporary file
    and run the test on that file. NGINX makes it possible by offering the `-``c`
    switch:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，在服务器生产环境中操作配置文件是一项危险的操作，应尽可能避免。此时的最佳实践是将新配置放入单独的临时文件中，并在该文件上进行测试。NGINX 提供了
    `-``c` 选项来实现这一点：
- en: '[PRE31]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This command will parse `/home/user/test.conf` and make sure it is a valid
    NGINX configuration file. When you are done, after making sure that your new file
    is valid, proceed to replace your current configuration file and reload the server
    configuration:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将解析 `/home/user/test.conf` 并确保它是有效的 NGINX 配置文件。完成后，在确保新文件有效后，继续替换当前配置文件并重新加载服务器配置：
- en: '[PRE32]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Other switches
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他选项
- en: 'Another switch that might come in handy in many situations is `-V`. Not only
    does it tell you the current NGINX build version but, more importantly, it also
    reminds you about the arguments that you used during the configuration step –
    in other words, the command switches that you passed to the `configure` script
    before compilation:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个在许多情况下可能派上用场的选项是 `-V`。它不仅会告诉你当前的 NGINX 构建版本，更重要的是，它还会提醒你在配置步骤中使用的参数——换句话说，它会列出你在编译前传递给
    `configure` 脚本的命令选项：
- en: '[PRE33]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In this case, NGINX was configured with the `--with-http_ssl_module` switch
    only.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，NGINX 仅配置了 `--with-http_ssl_module` 选项。
- en: Why is this so important? Well, if you ever try to use a module that was not
    included with the `configure` script during the precompilation process, the directive
    enabling the module will result in a configuration error. Your first reaction
    will be to wonder where the syntax error comes from. Your second reaction will
    be to wonder if you even built the module in the first place! Running `nginx -V`
    will answer this question.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这如此重要？嗯，如果你尝试使用一个在预编译过程中没有通过 `configure` 脚本包含的模块，启用该模块的指令将导致配置错误。你最初的反应可能是想知道语法错误来自哪里。接下来的反应可能会是，你甚至怀疑自己是否根本就没有构建这个模块！运行
    `nginx -V` 将回答这个问题。
- en: 'Additionally, the `-g` option lets you specify additional configuration directives,
    in case they were not included in the configuration file:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`-g` 选项允许你指定额外的配置指令，以防这些指令未包含在配置文件中：
- en: '[PRE34]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: In the next section, we will configure the daemon through the system to have
    NGINX integrated and running automatically on your Linux distribution.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将通过系统配置守护进程，使 NGINX 在你的 Linux 发行版上自动集成并运行。
- en: Adding NGINX as a system service
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 NGINX 添加为系统服务
- en: In this section, we will create a script that will transform the NGINX daemon
    into an actual system service. This will result in mainly two outcomes—the daemon
    will be controllable using standard commands and, more importantly, it will automatically
    be launched on system startup and stopped on system shutdown.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个脚本，将 NGINX 守护进程转换为实际的系统服务。这将带来两个主要结果——守护进程将能够使用标准命令进行控制，更重要的是，它将在系统启动时自动启动，在系统关闭时自动停止。
- en: systemd unit file
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: systemd 单元文件
- en: Most Linux-based operating systems to date use a systemd-style *service file*.
    Debian, Ubuntu, RHEL, and centOS all use systemd nowadays; therefore, this service
    file should work on any popular linux distribution. There is other init software,
    such as System V and OpenRC; however, we will stick with the more popular and
    most supported init.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，大多数基于 Linux 的操作系统都使用 systemd 风格的 *服务文件*。Debian、Ubuntu、RHEL 和 CentOS 都使用
    systemd；因此，这个服务文件应该在任何流行的 Linux 发行版中都能工作。还有其他初始化软件，如 System V 和 OpenRC；然而，我们将坚持使用更流行且得到最多支持的初始化方式。
- en: 'In this example, we will be using the NGINX service file provided by the official
    NGINX website:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用官方 NGINX 网站提供的 NGINX 服务文件：
- en: 'Create a file by using the following command:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令创建文件：
- en: '[PRE35]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![Figure 1.3: Default systemd service file for Nginx](img/B21787_01_3.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3：Nginx 的默认 systemd 服务文件](img/B21787_01_3.jpg)'
- en: 'Figure 1.3: Default systemd service file for Nginx'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3：Nginx 的默认 systemd 服务文件
- en: Note
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure your paths are correct, as well as the `After=` part which tells `systemd`
    to execute NGINX only after `syslog.target` and `network-online.target`. Add your
    own services there, such as your database server, your PHP server, and more.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的路径是正确的，以及 `After=` 部分，它告诉 `systemd` 只在 `syslog.target` 和 `network-online.target`
    之后执行 NGINX。在此处添加你自己的服务，例如数据库服务器、PHP 服务器等。
- en: 'Once your file has been saved, reload the `systemd` configuration using `systemctl
    daemon-reload`. Then, use `systemctl start nginx` to start the service. You can
    start, stop, and restart the service in the same way. To enable the service at
    boot, run the following:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦文件保存，使用 `systemctl daemon-reload` 重新加载 `systemd` 配置。然后，使用 `systemctl start
    nginx` 启动服务。你可以以相同的方式启动、停止和重启服务。要在启动时启用服务，请运行以下命令：
- en: '[PRE36]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'You can check whether your NGINX server will boot by running the `is-enabled`
    command:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过运行 `is-enabled` 命令检查你的 NGINX 服务器是否会启动：
- en: '[PRE37]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Handling system errors
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理系统错误
- en: 'Sometimes, you will encounter errors when starting NGINX with `systemd`. Here
    is an example:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，在使用 `systemd` 启动 NGINX 时，你会遇到错误。这里有一个例子：
- en: '![Figure 1.4: Debugging Nginx through systemd status](img/B21787_01_4.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4：通过 systemd 状态调试 Nginx](img/B21787_01_4.jpg)'
- en: 'Figure 1.4: Debugging Nginx through systemd status'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：通过 systemd 状态调试 Nginx
- en: 'In this case, you check the current status using `systemctl status nginx`.
    Most of the time, this tells you exactly why your NGINX server won’t start: very
    often, the NGINX configuration file is incorrect because of typos or forgotten
    characters. Make sure to double-check your configuration before restarting the
    NGINX server.'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你可以使用 `systemctl status nginx` 检查当前状态。大多数时候，这会告诉你为什么 NGINX 服务器无法启动：NGINX
    配置文件通常因为拼写错误或遗漏字符而不正确。请确保在重新启动 NGINX 服务器之前仔细检查你的配置。
- en: We have been diving into the compiling options for NGINX as well as its controlling
    daemon. Should you need professional support from the experts who have made NGINX
    what it is today, NGINX Plus might be for you.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经深入探讨了NGINX的编译选项以及其控制守护进程。如果你需要来自将NGINX发展至今日的专家的专业支持，NGINX Plus可能适合你。
- en: A quick overview of the possibilities offered by NGINX Plus
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NGINX Plus所提供的可能性概览
- en: As of mid-2013, NGINX, Inc., the company behind the NGINX project, also offers
    a paid subscription called NGINX Plus. The announcement came as a surprise for
    the open source community but several companies quickly jumped on the bandwagon
    and reported amazing improvements in terms of performance and scalability.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2013年中期，NGINX项目背后的公司NGINX, Inc.也推出了一个名为NGINX Plus的付费订阅服务。这一公告令开源社区感到惊讶，但几家公司很快就跟进并报告了在性能和可扩展性方面的惊人改进。
- en: NGINX, Inc., the high-performance web company, today announced the availability
    of NGINX Plus, a fully-supported version of the popular NGINX open source software
    complete with advanced features and offered with professional services. The product
    is developed and supported by the core engineering team at *Nginx Inc.*, and is
    available immediately on a subscription basis.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 高性能的Web公司NGINX, Inc.今天宣布推出NGINX Plus，这是流行的NGINX开源软件的完全支持版本，包含了先进的功能并提供专业服务。该产品由*Nginx
    Inc.*的核心工程团队开发和支持，并已通过订阅方式立即提供。
- en: As business requirements continue to evolve rapidly, such as the shift to mobile
    and the explosion of dynamic content on the Web, CIOs are continuously looking
    for opportunities to increase application performance and development agility,
    while reducing dependencies on their infrastructure. NGINX Plus provides a flexible,
    scalable, uniformly applicable solution that was purpose built for these modern,
    distributed application architectures.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 随着业务需求的快速变化，如向移动端的转型以及Web上动态内容的爆炸性增长，CIO们不断寻找机会来提高应用性能和开发灵活性，同时减少对基础设施的依赖。NGINX
    Plus提供了一种灵活、可扩展、广泛适用的解决方案，专为这些现代的分布式应用架构而设计。
- en: Considering the pricing plans ($1,500 per year per instance) and the additional
    features made available, this platform is indeed clearly aimed at large corporations
    looking to integrate NGINX into their global architecture seamlessly and effortlessly.
    Professional support from the NGINX team is included and discounts can be offered
    for multiple-instance subscriptions. This book covers the open source version
    of NGINX only and does not detail the advanced functionality offered by NGINX
    Plus. For more information about the paid subscription, take a look at [https://www.nginx.com/](https://www.nginx.com/).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到定价计划（每年每实例$1,500）以及提供的额外功能，这个平台显然是针对那些希望将NGINX无缝集成到全球架构中的大型企业。NGINX团队提供专业支持，并且对于多实例订阅可以提供折扣。本书仅涵盖NGINX的开源版本，不详细介绍NGINX
    Plus提供的高级功能。如需了解付费订阅的更多信息，请访问[https://www.nginx.com/](https://www.nginx.com/)。
- en: Summary
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter covered a number of critical steps. We first made sure that your
    system contained all the required components for compiling NGINX. We then proceeded
    to select the proper version branch for your usage – will you be using the stable
    version or a more advanced yet potentially less stable one? After downloading
    the source and configuring the compilation process by enabling or disabling features
    and modules such as SSL, GeoIP, and more, we compiled the application and installed
    it on the system in the directory of your choice. We created a `unit service`
    file and modified the system boot sequence to schedule the service to be started.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了一些关键步骤。我们首先确保你的系统包含了编译NGINX所需的所有组件。然后我们选择了适合你使用的版本分支——你是使用稳定版，还是选择一个更先进但可能不那么稳定的版本？在下载源代码并通过启用或禁用SSL、GeoIP等功能模块来配置编译过程后，我们编译了应用程序并将其安装到你选择的目录中。我们创建了一个`unit
    service`文件，并修改了系统启动顺序，以便调度启动该服务。
- en: From this point on, NGINX is installed on your server and automatically starts
    with the system. Your web server is functional, though it does not yet answer
    the most basic functionality – serving a website. The first step toward hosting
    a website will be to prepare a suitable configuration file. The next chapter will
    cover the basic configuration of NGINX and will teach you how to optimize performance
    based on the expected audience and system resources.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 从这一刻起，NGINX 已经安装在你的服务器上，并随系统自动启动。你的 web 服务器已经具备功能，尽管它尚未实现最基本的功能——提供网站服务。托管网站的第一步将是准备一个合适的配置文件。下一章将涵盖
    NGINX 的基础配置，并教你如何根据预期的访客群体和系统资源优化性能。
