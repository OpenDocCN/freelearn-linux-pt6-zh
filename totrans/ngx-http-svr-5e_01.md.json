["```\nyum install epel-release\nyum search nginx\nyum info PACKAGE_NAME\nyum install PACKAGE_NAME\n```", "```\napt-cache search nginx\napt-cache show PACKAGE_NAME\napt install PACKAGE_NAME\n```", "```\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/OS/OSRELEASE/$basearch/\ngpgcheck=0\nenabled=1\n```", "```\nyum install nginx\n```", "```\nsudo apt-key add nginx_signing.key\n```", "```\ndeb http://nginx.org/packages/debian/ codename nginx\ndeb-src http://nginx.org/packages/debian/ codename nginx\n```", "```\ndeb http://nginx.org/packages/ubuntu/ codename nginx\ndeb-src http://nginx.org/packages/ubuntu/ codename nginx\n```", "```\napt update\napt install nginx\n```", "```\n    vary-yum for a Red Hat Linux-based distribution, apt for Debian and Ubuntu, yast for SUSE Linux, and so on. Here is the typical way to proceed with the download and installation of the GCC package:\n\n    ```", "```\n    man utility. Either way, your package manager should be able to download and install GCC correctly, after having resolved dependencies automatically.\n    ```", "```\n\n    ```", "```\n[root@server ~]# yum install pcre pcre-devel\n```", "```\n[root@server ~]# yum install pcre*\n```", "```\n[root@server ~]# apt install libpcre3 libpcre3-dev\n```", "```\n[root@server ~]# yum install zlib zlib-devel\n```", "```\n[root@server ~]# apt install zlib1g zlib1g-dev\n```", "```\n[root@server ~]# yum install openssl openssl-devel\n```", "```\n[root@server ~]# apt install openssl libssl-dev\n```", "```\n[user@server ~]$ mkdir src && cd src\n[user@server src]$ wget https://nginx.org/download/nginx-1.25.2.tar.gz\n```", "```\n[user@server src]$ tar zxf nginx-1.25.2.tar.gz\n```", "```\n[user@server nginx-1.25.2]# ./configure\n```", "```\n[user@server nginx-1.25.2]# make\n```", "```\n[root@server nginx-1.25.2]# make install\n```", "```\n[root@server nginx]# ./configure --conf-path=/etc/nginx/nginx.conf\n```", "```\n./configure [...] --with-openssl=/usr/lib64\n```", "```\n[user@server nginx-1.25.2]$ make\n```", "```\n[root@server nginx-1.25.2]# make install\n```", "```\n[user@server ~]$ cd /usr/local/nginx/sbin\n[user@server sbin]$ ./nginx -h\n```", "```\n[emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use) [...] [emerg]: still could not bind().\n```", "```\n[root@server ~]# killall nginx\n```", "```\n[user@server ~]$ /usr/local/nginx/sbin/nginx -t\n```", "```\n[user@server sbin]$ ./nginx -t -c /home/user/test.conf\n```", "```\n[user@server sbin]$ cp -i /home/user/test.conf usr/local/nginx/conf/nginx.conf\ncp: erase 'nginx.conf' ? yes\n[user@server sbin]$ ./nginx -s reload\n```", "```\n[user@server sbin]$ ./nginx -V\nnginx version: nginx/1.25.2 (Ubuntu)\nbuilt by gcc 11.4.0 (Ubuntu 11.4.0-1ubuntu1~22.04)\nTLS SNI support enabled\nconfigure arguments: --with-http_ssl_module\n```", "```\n[user@server sbin]$ ./nginx -g \"timer_resolution 200ms\";\n```", "```\n    nano /etc/systemd/system/nginx.service\n    ```", "```\n    disable instead of enable in the preceding command.\n    ```", "```\n    root@server:~# systemctl is-enabled nginx\n    enabled\n    ```"]