["```\nyum install docker\nsystemctl start docker  \n```", "```\napt install docker  \n```", "```\ndocker pull nginx  \n```", "```\ndocker run --name nginx-basic -d -p 81:80 nginx  \n```", "```\ndocker run --name nginx-basic -d -p 81:80 -v /var/static:/usr/share/nginx/html:ro  nginx  \n```", "```\nFROM nginx:latest \n\n# Configuration \nCOPY default.conf /etc/nginx/conf.d/ \n\n# SSL Certificates and DH Key \nCOPY dockerdemo.crt /etc/ssl/dockerdemo.crt \nCOPY dockerdemo.key /etc/ssl/dockerdemo.key \nCOPY dh4096.pem /etc/ssl/dh4096.pem \n\n# Symlink the logs to stdout and stderr \nRUN ln -sf /dev/stdout /var/log/nginx/access.log \nRUN ln -sf /dev/stderr /var/log/nginx/error.log \n\n# Expose port 443 (HTTPS) \nEXPOSE 443 \n\nCMD [\"nginx\", \"-g\", \"daemon off;\"] \n```", "```\nserver { \n    listen              443 ssl http2; \n    server_name         dockerdemo.nginxcookbook.com; \n    ssl_certificate     /etc/ssl/dockerdemo.crt; \n    ssl_certificate_key /etc/ssl/dockerdemo.key; \n    ssl_dhparam         /etc/ssl/dh4096.pem; \n    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2; \n    ssl_ciphers         HIGH:!aNULL:!MD5; \n\n    ssl_prefer_server_ciphers on; \n    client_max_body_size 75M; \n\n    location / { \n        proxy_pass http://127.0.0.1:8000; \n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;                 \n        proxy_set_header X-Real-IP  $remote_addr; \n        proxy_set_header Host $host; \n    } \n} \n```", "```\ndocker build -t nginx-demo-proxy .  \n```", "```\ndocker images \n```", "```\ndocker run --name nginx-proxy -d --net=host nginx-demo-proxy  \n```", "```\ndocker network create webnet  \n```", "```\ndocker run -d --name demo-redmine --net webnet redmine  \n```", "```\nproxy_pass http://redmine-demo:3000; \n```", "```\ndocker build -t nginx-demo-proxy .\ndocker run --name nginx-proxy -d --net webnet -p 443:443 nginx-demo-proxy  \n```", "```\nversion: '3' \n\nnetworks: \n  webnet: \n\nservices: \n  redmine: \n    image: redmine \n    networks: \n      webnet: \n        aliases: \n          - demo-redmine \n\n  nginx-proxy: \n    build: ./ \n    ports: \n      - 443:443 \n    networks: \n      - webnet \n```", "```\ndocker-compose up  \n```", "```\nCreating network \"composedemo_webnet\" with the default driver\nCreating composedemo_redmine_1\nCreating composedemo_nginx-proxy_1\nAttaching to composedemo_nginx-proxy_1, composedemo_redmine_1  \n```", "```\ndocker-compose run -d  \n```", "```\ndocker-compose stop  \n```", "```\nserver { \n    listen              443 ssl http2; \n    server_name         dockerdemo.nginxcookbook.com; \n\n    ssl_certificate     /etc/ssl/dockerdemo.crt; \n    ssl_certificate_key /etc/ssl/dockerdemo.key; \n    ssl_dhparam         /etc/ssl/dh4096.pem; \n    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2; \n    ssl_ciphers         HIGH:!aNULL:!MD5; \n\n    ssl_prefer_server_ciphers on; \n    client_max_body_size 75M; \n\n    location / { \n        resolver 127.0.0.11 valid=1; \n        set $backend \"http://htestbackend:8000\"; \n        proxy_pass $backend; \n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \n        proxy_set_header X-Real-IP  $remote_addr; \n        proxy_set_header Host $host; \n    } \n} \n```", "```\nversion: '3' \n\nnetworks: \n  htestnet: \n\nservices: \n  nginx-proxy: \n    build: ./ \n    ports: \n      - \"443:443\" \n    networks: \n      - htestnet \n\n  htest: \n    image: timbutler/htest \n    networks: \n      htestnet: \n        aliases: \n          - htestbackend \n```", "```\ndocker-compose up -d  \n```", "```\ndocker-compose scale htest=4  \n```"]