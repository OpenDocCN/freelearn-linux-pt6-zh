["```\nserver {\n\n    listen 127.0.0.1:80;\n\n    server_name default.example.com;\n\n    server_name_in_redirect on;\n\n}\n\nserver {\n\n    listen 127.0.0.1:80;\n\n    server_name www.example.com;\n\n}\n```", "```\nserver {\n\n    server_name \"\";\n\n}\n```", "```\nhttp {\n\n    log_format vhost '$host $remote_addr - $remote_user [$time_local] ' \n                    '\"$request\" $status $body_bytes_sent ' \n                    '\"$http_referer\" \"$http_user_agent\"';\n\n    log_format downloads '$time_iso8601 $host $remote_addr '\n                    '\"$request\" $status $body_bytes_sent $request_time';\n\n    open_log_file_cache max=1000 inactive=60s;\n\n    access_log logs/access.log;\n\n    server {\n\n        server_name ~^(www\\.)?(.+)$;\n\n        access_log logs/combined.log vhost;\n\n        access_log logs/$2/access.log;\n\n        location /downloads {\n\n            access_log logs/downloads.log downloads;\n\n        }\n\n    }\n\n}\n```", "```\naccess_log /var/log/nginx/access.log.gz combined gzip=4 flush=1m;\n```", "```\nlog_format combined '$remote_addr - $remote_user [$time_local] ' \n '\"$request\" $status $body_bytes_sent ' \n '\"$http_referer\" \"$http_user_agent\"';\n\n```", "```\nserver {\n\n    root /home/customer/html;\n\n    location / {\n\n        index index.html index.htm;\n\n    }\n    location /downloads {\n\n        autoindex on;\n\n    }\n\n}\n```", "```\nlocation / {\n\n    try_files $uri $uri/ backups/$uri /generic-not-found.html;\n\n}\n```", "```\nserver {\n\n    root /home/customer/html;\n\n    disable_symlinks if_not_owner from=$document_root;\n\n}\n```", "```\nserver {\n\n    resolver 192.168.100.2 valid=300s;\n\n}\n```", "```\nserver {\n\n    resolver 192.168.100.2;\n\n    location / {\n\n        set $backend upstream.example.com;\n\n        proxy_pass http://$backend;\n\n    }\n\n}\n```", "```\nserver {\n\n    resolver 192.168.100.2;\n\n    resolver_timeout 3s;\n\n    error_page 504 /gateway-timeout.html;\n    location / {\n\n        proxy_pass http://upstream.example.com;\n\n    }\n\n}\n```", "```\nhttp {\n\n    # a generic error page to handle any server-level errors\n    error_page 500 501 502 503 504 share/examples/nginx/50x.html;\n\n    server {\n\n        server_name www.example.com;\n\n        root /home/customer/html;\n\n        # for any files not found, the page located at \n        #  /home/customer/html/404.html will be delivered\n        error_page 404 /404.html;\n        location / {\n\n            # any server-level errors for this host will be directed\n            # to a custom application handler\n            error_page 500 501 502 503 504 = @error_handler;\n\n        }\n\n        location /microsite {\n\n            # for any non-existent files under the /microsite URI,\n            #  the client will be shown a foreign page\n            error_page 404 http://microsite.example.com/404.html;\n\n        }\n\n        # the named location containing the custom error handler\n        location @error_handler {\n\n            # we set the default type here to ensure the browser\n            # displays the error page correctly\n            default_type text/html;\n\n            proxy_pass http://127.0.0.1:8080;\n\n        }\n\n    }\n\n}\n```", "```\nhttp {\n\n    limit_conn_zone $binary_remote_addr zone=connections:10m;\n\n    limit_conn_log_level notice;\n\n    server {\n\n        limit_conn connections 10;\n\n    }\n\n}\n```", "```\nhttp {\n\n    limit_req_zone $binary_remote_addr zone=requests:10m rate=1r/s;\n\n    limit_req_log_level warn;\n\n    server {\n\n        limit_req zone=requests burst=10 nodelay;\n\n    }\n\n}\n```", "```\nlocation /downloads {\n\n    limit_rate 500k;\n\n}\n```", "```\nlocation /downloads {\n\n    limit_rate_after 1m;\n\n    limit_rate 500k;\n\n}\n```", "```\nhttp {\n\n    limit_conn_zone $binary_remote_addr zone=ips:10m;\n\n    limit_conn_zone $server_name zone=servers:10m;\n\n    limit_req_zone $binary_remote_addr zone=requests:10m rate=1r/s;\n\n    limit_conn_log_level notice;\n\n    limit_req_log_level warn;\n\n    reset_timedout_connection on;\n\n    server {\n\n        # these limits apply to the whole virtual server\n        limit_conn ips 10;\n        # only 1000 simultaneous connections to the same server_name\n        limit_conn servers 1000;\n\n        location /search {\n\n            # here we want only the /search URL to be rate-limited\n            limit_req zone=requests burst=3 nodelay;\n\n        }\n\n        location /downloads {\n\n            # using limit_conn to ensure that each client is # bandwidth-limited\n            #  with no getting around it\n            limit_conn connections 1;\n\n            limit_rate_after 1m;\n\n            limit_rate 500k;\n\n        }\n\n    }\n\n}\n```", "```\nlocation /stats {\n\n    allow 127.0.0.1;\n    deny all;\n\n}\n```", "```\nserver {\n\n    server_name restricted.example.com;\n\n    auth_basic \"restricted\";\n\n    auth_basic_user_file conf/htpasswd;\n\n}\n```", "```\n#!/usr/bin/env ruby\n\n# setup the command-line options\nrequire 'optparse'\n\nOptionParser.new do |o|\n\n  o.on('-f FILE') { |file| $file = file }\n\n  o.on('-u', \"--username USER\") { |u| $user = u }\n\n  o.on('-p', \"--password PASS\") { |p| $pass = p }\n\n  o.on('-c', \"--comment COMM (optional)\") { |c| $comm = c }\n\n  o.on('-h') { puts o; exit }\n\n  o.parse!\n\n  if $user.nil? or $pass.nil?\n    puts o; exit\n\n  end\n\nend\n\n# initialize an array of ASCII characters to be used for the salt\nascii = ('a'..'z').to_a + ('A'..'Z').to_a + ('0'..'9').to_a + [ \".\", \"/\" ]\n\n$lines = []\n\nbegin\n\n  # read in the current http auth file\n  File.open($file) do |f|\n\n    f.lines.each { |l| $lines << l }\n\n  end\n\nrescue Errno::ENOENT\n\n  # if the file doesn't exist (first use), initialize the array\n  $lines = [\"#{$user}:#{$pass}\\n\"]\n\nend\n\n# remove the user from the current list, since this is the one we're editing\n$lines.map! do |line|\n\n  unless line =~ /#{$user}:/\n\n    line\n\n  end\n\nend\n\n# generate a crypt()ed password\npass = $pass.crypt(ascii[rand(64)] + ascii[rand(64)])\n# if there's a comment, insert it\nif $comm\n\n  $lines << \"#{$user}:#{pass}:#{$comm}\\n\"\n\nelse\n\n  $lines << \"#{$user}:#{pass}\\n\"\n\nend\n\n# write out the new file, creating it if necessary\n\nFile.open($file, File::RDWR|File::CREAT) do |f|\n\n  $lines.each { |l| f << l}\n\nend\n```", "```\n$ ./http_auth_basic.rb -f htpasswd -u testuser -p 123456\n```", "```\nserver {\n\n    server_name intranet.example.com;\n\n    location / {\n\n        auth_basic \"intranet: please login\";\n\n        auth_basic_user_file conf/htpasswd-intranet;\n\n        allow 192.168.40.0/24;\n\n        allow 192.168.50.0/24;\n\n        deny all;\n          satisfy any;\n\n    }\n```", "```\nserver {\n\n    server_name stage.example.com;\n\n    location / {\n\n        auth_basic \"staging server\";\n\n        auth_basic_user_file conf/htpasswd-stage;\n\n        allow 192.168.40.0/24;\n\n        allow 192.168.50.0/24;\n\n        deny all;\n\n    }\n```", "```\nlocation /videos {\n\n    flv;\n\n}\n```", "```\nmp4 moov atom is too large\n\n```", "```\nlocation /videos {\n\n    mp4;\n\n    mp4_buffer_size 1m;\n\n    mp4_max_buffer_size 20m;\n\n}\n```", "```\n<timestamp> [emerg] <master pid>#0: the duplicate \"<variable_name>\" variable in <path-to-configuration-file>:<line-number>\n\n```", "```\n## Defines the $no_slash_uri variable for drupal 6.\nmap $uri $no_slash_uri {\n\n    ~^/(?<no_slash>.*)$ $no_slash;\n}\n\nserver { \n\n    server_name www.example.com; \n\n    root /home/customer/html; \n\n    index index.php;\n\n    # keep alive to the FastCGI upstream (used in conjunction with\n    #  the \"keepalive\" directive in the upstream section)\n    fastcgi_keep_conn on;\n\n    # The 'default' location.\n    location / {\n        ## (Drupal 6) Use index.html whenever there's no index.php.\n        location = / {\n            error_page 404 =200 /index.html;\n        }\n        # Regular private file serving (i.e. handled by Drupal).\n        location ^~ /system/files/ {\n\n            include fastcgi_private_files.conf;\n\n            fastcgi_pass 127.0.0.1:9000;\n            # For not signaling a 404 in the error log whenever the\n            # system/files directory is accessed add the line below.\n            # Note that the 404 is the intended behavior.\n            log_not_found off;\n\n        }\n\n        # Trying to access private files directly returns a 404.\n        location ^~ /sites/default/files/private/ {\n            internal;\n        }\n\n        ## (Drupal 6) If accessing an image generated by imagecache,\n        ## serve it directly if available, if not relay the request to# Drupal\n        ## to (re)generate the image.\n        location ~* /imagecache/ {\n\n            access_log off;\n\n            expires 30d;\n\n            try_files $uri /index.php?q=$no_slash_uri&$args;\n\n        }\n\n        # Drupal 7 image handling, i.e., imagecache in core\n        location ~* /files/styles/ {\n\n            access_log off;\n\n            expires 30d;\n\n            try_files $uri @drupal;\n\n        }\n```", "```\n        # Advanced Aggregation module CSS support.\n        location ^~ /sites/default/files/advagg_css/ {\n            location ~* /sites/default/files/advagg_css/css_[[:alnum:]]+\\.css$ {\n```", "```\n        # Advanced Aggregation module JS\n        location ^~ /sites/default/files/advagg_js/ {\n            location ~* /sites/default/files/advagg_js/js_[[:alnum:]]+\\.js$ {\n```", "```\n                access_log off;\n\n                add_header Pragma '';\n\n                add_header Cache-Control 'public, max-age=946080000';\n\n                add_header Accept-Ranges '';\n\n                # This is for Drupal 7\n                try_files $uri @drupal;\n\n                ## This is for Drupal 6 (use only one)\n                try_files $uri /index.php?q=$no_slash_uri&$args;\n\n            }\n\n        }\n\n        # All static files will be served directly.\n        location ~* ^.+\\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml)$ {\n\n            access_log off;\n\n            expires 30d;\n\n            # Send everything all at once.\n            tcp_nodelay off;\n\n            # Set the OS file cache.\n            open_file_cache max=3000 inactive=120s;\n            open_file_cache_valid 45s;\n\n            open_file_cache_min_uses 2;\n\n            open_file_cache_errors off;\n\n        }\n\n        # PDFs and powerpoint files handling.\n        location ~* ^.+\\.(?:pdf|pptx?)$ {\n\n            expires 30d;\n\n            # Send everything all at once.\n            tcp_nodelay off;\n\n        }\n```", "```\n        # MP3 files are served using AIO where supported by the OS.\n        location ^~ /sites/default/files/audio/mp3 {\n\n            location ~* ^/sites/default/files/audio/mp3/.*\\.mp3$ {\n```", "```\n        # Ogg/Vorbis files are served using AIO where supported by theOS.\n        location ^~ /sites/default/files/audio/ogg {\n\n            location ~* ^/sites/default/files/audio/ogg/.*\\.ogg$ {\n```", "```\n                directio 4k; # for XFS\n\n                tcp_nopush off;\n                aio on;\n                output_buffers 1 2M;\n            }\n\n        }\n        # Pseudo-streaming of FLV files\n        location ^~ /sites/default/files/video/flv {\n\n            location ~* ^/sites/default/files/video/flv/.*\\.flv$ {\n\n                flv;\n\n            }\n\n        }\n```", "```\n        # Pseudo-streaming of H264 files.\n        location ^~ /sites/default/files/video/mp4 {\n\n            location ~* ^/sites/default/files/video/mp4/.*\\.(?:mp4|mov)$ {\n```", "```\n        # Pseudo-streaming of AAC files.\n        location ^~ /sites/default/files/video/m4a {\n\n            location ~* ^/sites/default/files/video/m4a/.*\\.m4a$ {\n```", "```\n                mp4;\n\n                mp4_buffer_size         1M;\n\n                mp4_max_buffer_size 5M;\n\n            }\n\n        }\n\n        # Advanced Help module makes each module-provided\n        # README available.\n        location ^~ /help/ {\n\n            location ~* ^/help/[^/]*/README\\.txt$ {\n                include fastcgi_private_files.conf;\n\n                fastcgi_pass 127.0.0.1:9000;\n\n            }\n        }\n\n        # Replicate the Apache <FilesMatch> directive of Drupal # standard\n        # .htaccess. Disable access to any code files. Return a 404 to# curtail\n        # information disclosure. Also hide the text files.\n        location ~* ^(?:.+\\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|test|theme|tpl(?:\\.php)?|xtmpl)|code-style\\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {\n\n            return 404;\n\n        }\n\n        #First we try the URI and relay to the /index.php?q=$uri&$argsif not found.\n        try_files $uri @drupal;\n\n        ## (Drupal 6) First we try the URI and relay to the /index.php?q=$no_slash_uri&$args if not found. (use only one)\n        try_files $uri /index.php?q=$no_slash_uri&$args;\n\n    } # default location ends here\n\n    # Restrict access to the strictly necessary PHP files. Reducingthe\n    # scope for exploits. Handling of PHP code and the Drupal eventloop.\n    location @drupal {\n\n        # Include the FastCGI config.\n        include fastcgi_drupal.conf;\n\n        fastcgi_pass 127.0.0.1:9000;\n\n    }\n\n    location @drupal-no-args {\n        include fastcgi_private_files.conf;\n\n        fastcgi_pass 127.0.0.1:9000;\n\n    }\n\n    ## (Drupal 6)\n    ## Restrict access to the strictly necessary PHP files. Reducing# the\n    ## scope for exploits. Handling of PHP code and the Drupal event # loop.\n    ## (use only one)\n    location = /index.php {\n\n        # This is marked internal as a pro-active security practice.\n        # No direct access to index.php is allowed; all accesses are# made\n        #  by NGINX from other locations or internal redirects.\n        internal;\n\n        fastcgi_pass 127.0.0.1:9000;\n\n    }\n```", "```\n    # Disallow access to .git directory: return 404 as not to disclose\n    # information.\n    location ^~ /.git { return 404; }\n    # Disallow access to patches directory.\n    location ^~ /patches { return 404; }\n    # Disallow access to drush backup directory.\n    location ^~ /backup { return 404; }\n    # Disable access logs for robots.txt.\n    location = /robots.txt {\n\n        access_log off;\n\n    }\n\n    # RSS feed support.\n    location = /rss.xml {\n\n        try_files $uri @drupal-no-args;\n        ## (Drupal 6: use only one)\n        try_files $uri /index.php?q=$uri;\n\n    }\n\n    # XML Sitemap support.\n    location = /sitemap.xml {\n        try_files $uri @drupal-no-args;\n\n        ## (Drupal 6: use only one)\n        try_files $uri /index.php?q=$uri;\n    }\n\n    # Support for favicon. Return an 1x1 transparent GIF if it doesn't\n    # exist.\n    location = /favicon.ico {\n\n        expires 30d;\n\n        try_files /favicon.ico @empty;\n\n    }\n\n    # Return an in-memory 1x1 transparent GIF.\n    location @empty {\n\n        expires 30d;\n\n        empty_gif;\n\n    }\n\n    # Any other attempt to access PHP files returns a 404.\n    location ~* ^.+\\.php$ {\n\n        return 404;\n\n    }\n\n} # server context ends here\n```", "```\nhttp {\n    # spawn a uWSGI server to connect to\n    # uwsgi --master --emperor /etc/djangoapps --fastrouter 127.0.0.1:3017 --fastrouter-subscription-server 127.0.0.1:3032\n    # see http://uwsgi-docs.readthedocs.org/en/latest/Emperor.html\n    # and http://projects.unbit.it/uwsgi/wiki/Example\n    upstream emperor {\n        server 127.0.0.1:3017;\n    }\n\n    server {\n        # the document root is set with a variable so that multiple # sites\n        # may be served - note that all static application files are\n        # expected to be found under a subdirectory \"static\" and all# user\n        # uploaded files under a subdirectory \"media\"\n        # see https://docs.djangoproject.com/en/dev/howto/static-files/\n        root /home/www/sites/$host;\n\n        location / {\n            # CSS files are found under the \"styles\" subdirectory\n            location ~* ^.+\\.$ {\n                root /home/www/sites/$host/static/styles;\n                expires 30d;\n            }\n            # any paths not found under the document root get passed # to\n            #  the Django running under uWSGI\n            try_files $uri @django;\n        }\n\n        location @django {\n            # $document_root needs to point to the application code\n            root /home/www/apps/$host;\n            # the uwsgi_params file from the nginx distribution\n            include uwsgi_params;\n            # referencing the upstream we defined earlier, a uWSGI # server\n            #  running in Emperor mode with FastRouter\n            uwsgi_param UWSGI_FASTROUTER_KEY $host;\n            uwsgi_pass emperor;\n        }\n\n        # the robots.txt file is found under the \"static\" subdirectory\n        # an exact match speeds up the processing\n\n        location = /robots.txt {\n            root /home/www/sites/$host/static;\n            access_log off;\n        }\n\n        # again an exact match\n        location = /favicon.ico {\n            error_page 404 = @empty;\n            root /home/www/sites/$host/static;\n            access_log off;\n            expires 30d;\n        }\n\n        # generates the empty image referenced above\n        location @empty {\n            empty_gif;\n        }\n\n        # if anyone tries to access a '.py' file directly,\n        #  return a File Not Found code\n        location ~* ^.+\\.py$ {\n            return 404;\n        }\n    }\n}\n```"]