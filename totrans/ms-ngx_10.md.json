["```\n^/images/([a-z]{2})/([a-z0-9]{5})/(.*)\\.(png|jpg|gif)$\n```", "```\n/data?file=$3.$4\n```", "```\nrewrite '^/images/([a-z]{2})/([a-z0-9]{5})/(.*)\\.(png|jpg|gif)$' /data?file=$3.$4 last;\n```", "```\nif ($bwhog) {\n\n    limit_rate 300k;\n\n    break;\n\n}\n```", "```\nlocation = /image404.html {\n\n    return 404 \"image not found\\n\";\n\n}\n```", "```\nhttp {\n\n    # a special log format referencing variables we'll define later\n    log_format imagelog '[$time_local] ' $image_file ' ' $image_type ' ' $body_bytes_sent ' ' $status;\n\n    # we want to enable rewrite-rule debugging to see if our rule does\n    #  what we intend\n    rewrite_log on;\n\n    server {\n\n        root /home/www;\n\n        location / {\n\n            # we specify which logfile should receive the rewrite-ruledebug\n            #  messages\n            error_log logs/rewrite.log notice;\n\n            # our rewrite rule, utilizing captures and positional variables\n            #  note the quotes around the regular expression - theseare\n            #  required because we used {} within the expression itself\n            rewrite '^/images/([a-z]{2})/([a-z0-9]{5})/(.*)\\.(png|jpg|gif)$' /data?file=$3.$4;\n\n            # note that we didn't use the 'last' parameter above; if we had,\n            #  the variables below would not be set because NGINX would\n            #  have ended rewrite module processing\n\n            # here we set the variables that are used in the custom log\n            #   format 'imagelog'\n            set $image_file $3;\n\n            set $image_type $4;\n\n        }\n\n        location /data {\n\n            # we want to log all images to this specially-formatted logfile\n            #  to make parsing the type and size easier\n            access_log logs/images.log imagelog;\n\n            root /data/images;\n\n            # we could also have used the $image-variables we defined\n            #  earlier, but referencing the argument is more readable\n            try_files /$arg_file /image404.html;\n\n        }\n\n        location = /image404.html {\n\n            # our special error message for images that don't exist\n            return 404 \"image not found\\n\";\n\n        }\n\n}\n```", "```\nif (condition) { â€¦ }\n```", "```\n/\n/home\n/home/\n/home/index\n/home/index/\n/index\n/index.php\n/index.php/\n```", "```\nrewrite ^/(home(/index)?|index(\\.php)?)/?$ $scheme://$host/ permanent;\n```", "```\nlog_format imagelog '[$time_local] ' $image_file ' ' $image_type ' ' $body_bytes_sent ' ' $status;\n\nrewrite '^/images/([a-z]{2})/([a-z0-9]{5})/(.*)\\.(png|jpg|gif)$' /data?file=$3.$4;\n\nset $image_file $3;\n\nset $image_type $4;\n\naccess_log logs/images.log imagelog;\n```", "```\nserver {\n\n    rewrite ^(/images)/(.*)\\.(png|jpg|gif)$ $1/$3/$2.$3 last;\n    location /images/ {\n\n        rewrite ^(/images)/(.*)\\.(png|jpg|gif)$ $1/$3/$2.$3 break;\n\n    }\n\n}\n```", "```\nrewrite ^/images/(.*)_(\\d+)x(\\d+)\\.(png|jpg|gif)$ /resizer/$1.$4?width=$2&height=$3? last;\n```", "```\nRewriteCond %{REQUEST_FILENAME} !-f\n\nRewriteCond %{REQUEST_FILENAME} !-d\n\nRewriteRule ^(.*)$ index.php?q=$1 [L]\n```", "```\ntry_files $uri $uri/ /index.php?q=$uri;\n```", "```\nif (!-e $request_filename) {\n\n    rewrite ^/(.*)$ /index.php?q=$1 last;\n\n}\n```", "```\nRewriteCond %{REQUEST_URI} ^/niceurl\n\nRewriteRule ^(.*)$ /index.php?q=$1 [L]\n```", "```\nlocation /niceurl {\n\n    include fastcgi_params;\n\n    fastcgi_index index.php;\n\n    fastcgi_pass 127.0.0.1:9000;\n\n}\n```", "```\nRewriteRule ^/controller/show.do$ http://example.com/controller [L,R=301]\n```", "```\nlocation = /controller/show.do {\n\n    rewrite ^ http://example.com/controller permanent;\n\n}\n```", "```\nRewriteCond %{HTTP_HOST} !^www\n\nRewriteRule ^(.*)$ http://www.example.com/$1 [L,R=301]\n```", "```\nserver {\n\n    server_name example.com;\n\n    rewrite ^ http://www.example.com$request_uri permanent;\n\n}\n```", "```\nRewriteCond %{HTTP_HOST} ^www\n\nRewriteRule ^(.*)$ http://example.com/$1 [L,R=301]\n```", "```\nserver {\n\n    server_name www.example.com;\n\n    rewrite ^ http://example.com$request_uri permanent;\n\n}\n```", "```\nRewriteCond %{HTTP_HOST} ^site1\n\nRewriteRule ^(.*)$ /site1/$1 [L]\n\nRewriteCond %{HTTP_HOST} ^site2\n\nRewriteRule ^(.*)$ /site2/$1 [L]\n\nRewriteCond %{HTTP_HOST} ^site3\n\nRewriteRule ^(.*)$ /site3/$1 [L]\n```", "```\nserver {\n\n    server_name site1.example.com;\n    root /home/www/site1;\n\n}\n\nserver {\n\n    server_name site2.example.com;\n\n    root /home/www/site2;\n\n}\n\nserver {\n\n    server_name site3.example.com;\n\n    root /home/www/site3;\n\n}\n```", "```\nRewriteCond  %{HTTP_USER_AGENT}  ^Mozilla \n\nRewriteRule  ^/$                 /homepage.max.html  [L] \n\nRewriteCond  %{HTTP_USER_AGENT}  ^Lynx \nRewriteRule  ^/$                 /homepage.min.html  [L] \n\nRewriteRule  ^/$                 /homepage.std.html  [L]\n```", "```\nif ($http_user_agent ~* ^Mozilla) { \n\n    rewrite ^/$ /homepage.max.html break; \n\n}\n\nif ($http_user_agent ~* ^Lynx) { \n\n    rewrite ^/$ /homepage.min.html break; \n\n}\n\nindex homepage.std.html;\n```"]