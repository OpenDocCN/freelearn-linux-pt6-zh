["```\nhttp {\n   # Enable gzip compression at the http block level\n   gzip on;\n   server {\n      server_name localhost;\n       listen 80;\n      # At this stage, gzip still set to on\n      location /downloads/ {\n          gzip off;\n     #    This directive only applies to documents found\n     #    in /downloads/\n      }\n   }\n}\n```", "```\n    backlog=num, rcvbuf=size, sndbuf=size, accept_filter=filter, deferred, setfib=number, fastopen=number, ipv6only=on|off, reuseport, so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt], bind, http2\n    ```", "```\n    listen 192.168.1.1:80; listen 127.0.0.1;\n    listen 80 default_server;\n    listen [:::a8c9:1234]:80; # IPv6 addresses must be put between square brackets\n    listen 443 ssl http2;\n    ```", "```\nserver_name www.website.com;\nserver_name www.website.com website.com;\nserver_name *.website.com;\nserver_name .website.com; # combines both *.website.com and website.com\nserver_name *.website.*;\nserver_name ~^(www)\\.example\\.com$; # $1 = www\n```", "```\nserver_name website.com \"\";\nserver_name _ \"\";\n```", "```\nroot /home/website.com/public_html;\n```", "```\nhttp {\n   server {\n       server_name localhost;\n       root /var/www/website.com/html;\n        location /admin/ {\n        alias /var/www/locked/;\n      }\n   }\n}\n```", "```\nerror_page 404 /not_found.html;\nerror_page 500 501 502 503 504 /server_error.html;\nerror_page 403 http://website.com/;\nerror_page 404 @notfound; # jump to a named location block\nerror_page 404 =200 /index.html; # in case of 404 error, redirect to index.html with a 200 OK response code\n```", "```\nindex index.php index.html index.htm;\nindex index.php index.php /catchall.php;\n```", "```\nlocation / {\n    try_files $uri $uri.html $uri.xml @proxy;\n}\n# the following is a \"named location block\"\nlocation @proxy {\n    proxy_pass 127.0.0.1:8080;\n}\n```", "```\nlocation / {\n    try_files $uri $uri.php @proxy;\n}\n# the following is a \"named location block\"\nlocation @proxy {\n    proxy_pass 127.0.0.1:8080;\n}\n```", "```\nkeepalive_timeout 75;\nkeepalive_timeout 75 60;\n```", "```\nclient_body_temp_path /tmp/nginx_rbf;\nclient_body_temp_path temp 2; # Nginx will create 2-digit folders to hold request body files\nclient_body_temp_path temp 1 2 4; # Nginx will create 3 levels of folders (first level: 1 digit, second level: 2 digits, third level: 4 digits)\n```", "```\ntypes {\n  mimetype1  extension1;\n  mimetype2  extension2 [extension3...];\n  [...]\n}\n```", "```\ninclude mime.types;\n```", "```\nhttp {\n   include mime.types;\n   [...]\n   location /downloads/ {\n       # removes all MIME types\n       types { }\n       default_type application/octet-stream;\n    }\n  [...]\n}\n```", "```\ntypes {\n  text/html html;\n  image/gif gif;\n  image/jpeg jpg;\n}\n```", "```\nlocation /admin/ {\n    limit_except GET {\n      allow 192.168.1.0/24;\n      deny all;\n    }\n}\n```", "```\nlimit_except METHOD1 [METHOD2...] {\n  allow | deny | auth_basic | auth_basic_user_file | proxy_pass | perl;\n}\n```", "```\nlimit_rate 500k;\n```", "```\nlimit_rate 10m;\n```", "```\nlocation /admin/ {\n    allow 192.168.1.0/24;\n    deny all;\n    auth_basic \"Authentication required\";\n    auth_basic_user_file conf/htpasswd;\n}\n```", "```\nserver {\n    [...]\n    server_name .website.com;\n    location /admin/ {\n        internal;\n    }\n}\n```", "```\nopen_file_cache max=5000 inactive=180;\n```", "```\nopen_file_cache_min_uses 3;\n```", "```\nserver {\n    [...]\n    server_name website.com;\n    location /documents/ {\n        type { }\n        default_type text/plain;\n   }\n}\n```", "```\nresolver 127.0.0.1; #use local DNS\nresolver 8.8.8.8 8.8.4.4 valid=1h;#GoogleDNS & 1 hour cache\n```", "```\nlocation /payment/ {\n    post_action /scripts/done.php;\n}\n```", "```\nlisten 443 ssl http2;\n```", "```\nserver {\n    server_name website.com;\n    location /admin/ {\n    # The configuration you place here only applies to\n    # http://website.com/admin/\n    }\n}\n```", "```\nlocation [=|~|~*|^~|@] pattern { … }\n```", "```\nserver {\n    server_name website.com;\n    location = /abcd {\n    [...]\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location /abcd {\n    [...]\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location ~ ^/abcd$ {\n    [...]\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location ~* ^/abcd$ {\n    [...]\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location /files/ {\n    # applies to any request starting wi\"h \"/fil\"s/\"\n    # for example /files/doc.txt, /files/, /files/temp/\n    }\n    location = /files/ {\n    # applies to the exact request \"o \"/fil\"s/\"\n    # and as such does not apply to /files/doc.txt\n    # but only /files/\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location /doc {\n    [...] # requests beginning with \"/doc\"\n    }\n    location ~* ^/document$ {\n    [...] # requests exactly matching \"/document\"\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location /document {\n    [...] # requests beginning with \"/document\"\n    }\n    location ~* ^/document$ {\n    [...] # requests exactly matching \"/document\"\n    }\n}\n```", "```\nserver {\n    server_name website.com;\n    location ^~ /doc {\n    [...] # requests beginning with \"/doc\"\n    }\n    location ~* ^/document$ {\n    [...] # requests exactly matching \"/document\"\n    }\n}\n```"]