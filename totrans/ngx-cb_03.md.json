["```\napt-get install python-pip python-dev pip install uwsgi\n```", "```\n[uwsgi] \nsocket = 127.0.0.1:8000 \nuid=www-data \ngid=www-data \nchdir=/var/www/djangodemo \nmodule=djangodemo.wsgi \nmaster=True \npidfile=/tmp/uwsgi-djangodemo.pid \nvacuum=True \nmax-requests=5000 \ndaemonize=/var/log/uwsgi/djangodemo.log \n```", "```\nserver { \n    listen       80; \n    server_name  djangodemo.nginxcookbook.com; \n\n    access_log  /var/log/nginx/djangodemo-access.log  combined; \n\n    location = /favicon.ico { access_log off; log_not_found off; } \n\n    location /static|/media { \n        root /var/www/djangodemo/; \n    } \n\n    location / { \n        include         uwsgi_params; \n        uwsgi_pass      127.0.0.1:8000; \n    } \n} \n```", "```\nlocation = /favicon.ico { access_log off; log_not_found off; } \n```", "```\nlocation /static|/media { \n    root /var/www/djangodemo/; \n} \n```", "```\nlocation / { \n    include         uwsgi_params; \n    uwsgi_pass      127.0.0.1:8000; \n} \n```", "```\nvar express = require('express'); \nvar app = express(); \nvar expressWs = require('express-ws')(app); \n\napp.get('/', function (req, res) { \n    res.send('Nginx demo!!!'); \n}); \n\napp.ws('/echo', function(ws, req) { \n    ws.on('message', function(msg) { \n        ws.send(msg); \n    }); \n}); \n\napp.listen(3000); \n```", "```\nserver { \n    listen       80; \n    server_name  express.nginxcookbook.com; \n\n    access_log  /var/log/nginx/express-access.log  combined; \n\n    location / { \n         proxy_pass http://127.0.0.1:3000; \n         proxy_http_version 1.1; \n         proxy_set_header Upgrade $http_upgrade; \n         proxy_set_header Connection \"upgrade\"; \n    } \n} \n```", "```\nproxy_pass http://127.0.0.1:3000; \n```", "```\nproxy_http_version 1.1; \n```", "```\nproxy_set_header Upgrade $http_upgrade; \nproxy_set_header Connection \"upgrade\"; \n```", "```\ngem install passenger\n```", "```\napt-get build-dep Nginx mkdir ~/nginxbuild cd ~/nginxbuild apt-get source nginx\n```", "```\n--add-module=/var/lib/gems/2.3.0/gems/passenger-5.0.27/src/nginx_module \\\n```", "```\npassenger-config --nginx-addon-dir\n```", "```\nnginx (1.9.14-1-passenger) wily; urgency=low \n\n  * Added Passenger as a dynamic module \n```", "```\nfakeroot debian/rules binary\n```", "```\ndpkg -i ../nginx_1.9.14-1-passenger_amd64.deb\n```", "```\npassenger start --debug-nginx\n```", "```\ninclude '/var/lib/gems/2.3.0/gems/passenger-5.0.27/resources/mime.types'; \npassenger_root '/var/lib/gems/2.3.0/gems/passenger-5.0.27'; \npassenger_abort_on_startup_error on; \npassenger_ctl cleanup_pidfiles L3RtcC9wYXNzZW5nZXItc3RhbmRhbG9uZS41aDBnZG0vdGVtcF9kaXJfdG91Y2hlci5waWQ=; \npassenger_ctl integration_mode standalone; \npassenger_ctl standalone_engine nginx; \npassenger_user_switching off; \npassenger_ruby /usr/bin/ruby2.3; \npassenger_user www-data; \npassenger_default_user www-data; \npassenger_analytics_log_user www-data; \npassenger_log_level 3; \n```", "```\nserver { \n    server_name  railsdemo.nginxcookbook.com; \n    listen 80; \n    access_log  /var/log/nginx/rails-access.log  combined; \n    root /var/www/railsdemo/public; \n    passenger_app_root /var/www/railsdemo; \n    passenger_enabled on; \n\n    location ~ ^/assets/ { \n    } \n} \npassenger_pre_start http://0.0.0.0:3000/; \n```", "```\nfrom flask import Flask \napplication = Flask(__name__) \n\n@application.route(\"/\") \ndef hello(): \n    return \"<h1>Demo via Nginx with uWSGI!</h1>\" \n\nif __name__ == \"__main__\": \n    application.run(host='127.0.0.1', port=9001) \n```", "```\napt-get install python-pip python-dev pip install uwsgi\n```", "```\n      [uwsgi]\n      socket = 127.0.0.1:8000\n      uid = www-data gid = www-data\n      chdir = /var/www/flaskdemo\n      module = demoapp\n      callable = application\n      master = True\n      pidfile = /tmp/uwsgi-flaskdemo.pid\n      max-requests = 5000\n      daemonize = /var/log/uwsgi/flaskdemo.log\n```", "```\n      uwsgi --ini uwsgi.ini\n```", "```\n      server { \n          listen 80; \n          server_name flaskdemo.nginxcookbook.com;\n          access_log /var/log/nginx/flaskdemo-access.log combined;\n          location = /favicon.ico { access_log off; log_not_found off; } \n          location / {\n              include uwsgi_params;\n              uwsgi_pass 127.0.0.1:8000;\n              uwsgi_param SCRIPT_NAME '';\n          }\n      }\n```", "```\nserver { \n    listen       80; \n    server_name  laravel.nginxcookbook.com; \n    access_log  /var/log/nginx/laravel.access.log  combined; \n    index index.php; \n\n    root   /var/www/vhosts/laraveldemo/public; \n\n    location / { \n        try_files $uri $uri/ /index.php?$args; \n    } \n\n    location ~ \\.php$ { \n        fastcgi_pass unix:/var/run/php7.0-fpm.sock; \n        fastcgi_index index.php; \n        fastcgi_param SCRIPT_FILENAME \n         $document_root$fastcgi_script_name; \n        include fastcgi_params; \n    } \n} \n```", "```\nmeteor run\n```", "```\nserver { \n    listen       80; \n    server_name  meteorapp.nginxcookbook.com; \n\n    access_log  /var/log/nginx/meteor-access.log  combined; \n\n    location / { \n         proxy_pass http://127.0.0.1:3000; \n         proxy_http_version 1.1; \n         proxy_set_header Upgrade $http_upgrade; \n         proxy_set_header Connection \"upgrade\"; \n    } \n} \n```", "```\ncd $GOPATH/src/github.com/beego/samples/todo go build ./main\n```", "```\nserver { \n    listen       80; \n    server_name  beegodemo.nginxcookbook.com; \n    access_log  /var/log/nginx/beegodemo-access.log  combined; \n    location = /favicon.ico { access_log off; log_not_found off; } \n    location / { \n         proxy_pass http://127.0.0.1:8080; \n         proxy_http_version 1.1; \n         proxy_set_header Upgrade $http_upgrade; \n         proxy_set_header Connection \"upgrade\"; \n    } \n} \n```"]